{"version":3,"sources":["TodoForm.js","Todo.js","TodoList.js","index.js"],"names":["TodoForm","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","task","handleChange","e","setState","defineProperty","target","name","value","handlesubmit","preventDefault","newTask","objectSpread2","id","uuid","completed","props","addItem","inherits","createClass","key","react_default","a","createElement","onSubmit","htmlFor","className","onChange","placeholder","Component","Todo","isEditing","toggleForm","handleUpdate","handleUpdateItem","handleChage","handleToggle","handleCompletion","renderIsEditing","Fragment","type","onClick","handleDeleteItem","TodoList","todos","toConsumableArray","deleteItem","filter","updateItem","updatedTask","updatedTodos","map","todo","toggleCompletion","_this2","Todo_Todo","bind","TodoForm_TodoForm","rootElement","document","getElementById","ReactDOM","render","TodoList_TodoList"],"mappings":"wQAGaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CAAEC,KAAM,IADlBhB,EAGEiB,aAAe,SAAAC,GACblB,EAAKmB,SAALlB,OAAAmB,EAAA,EAAAnB,CAAA,GACGiB,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SALhCvB,EASEwB,aAAe,SAAAN,GACbA,EAAEO,iBACF,IAAMC,EAAOzB,OAAA0B,EAAA,EAAA1B,CAAA,GAAQD,EAAKe,MAAb,CAAoBa,GAAIC,MAAQC,WAAW,IACnD9B,EAAKe,MAAMC,OAChBhB,EAAK+B,MAAMC,QAAQN,GACnB1B,EAAKmB,SAAS,CAAEH,KAAM,OAd1BhB,EAAA,OAAAC,OAAAgC,EAAA,EAAAhC,CAAAJ,EAAAC,GAAAG,OAAAiC,EAAA,EAAAjC,CAAAJ,EAAA,EAAAsC,IAAA,SAAAZ,MAAA,WAkBI,OACEa,EAAAC,EAAAC,cAAA,QAAMC,SAAUpC,KAAKqB,cACnBY,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,QAAf,YACAJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACbL,EAAAC,EAAAC,cAAA,SACEhB,KAAK,OACLM,GAAG,OACHc,SAAUvC,KAAKc,aACfM,MAAOpB,KAAKY,MAAMC,KAClB2B,YAAY,aAEdP,EAAAC,EAAAC,cAAA,UAAQG,UAAU,WAAlB,kBA7BV5C,EAAA,CAA8B+C,aCDjBC,EAAb,SAAA/C,GAAA,SAAA+C,IAAA,IAAA9C,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0C,GAAA,QAAAzC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA4C,IAAAjC,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CAAE+B,WAAW,EAAO9B,KAAMhB,EAAK+B,MAAMf,MAD/ChB,EAGE+C,WAAa,WACX/C,EAAKmB,SAAS,CAAE2B,WAAY9C,EAAKe,MAAM+B,aAJ3C9C,EAOEgD,aAAe,SAAA9B,GACbA,EAAEO,iBACFzB,EAAK+B,MAAMkB,iBAAiBjD,EAAK+B,MAAMH,GAAI5B,EAAKe,MAAMC,MACtDhB,EAAKmB,SAAS,CAAE2B,WAAW,KAV/B9C,EAaEkD,YAAc,SAAAhC,GACZlB,EAAKmB,SAAS,CACZH,KAAME,EAAEG,OAAOE,SAfrBvB,EAmBEmD,aAAe,SAAAjC,GACblB,EAAK+B,MAAMqB,iBAAiBpD,EAAK+B,MAAMH,KApB3C5B,EAuBEqD,gBAAkB,WAoChB,OAlCIrD,EAAKe,MAAM+B,UAEXV,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KACElB,EAAAC,EAAAC,cAAA,QAAMG,UAAU,YAAYF,SAAUvC,EAAKgD,cACzCZ,EAAAC,EAAAC,cAAA,SACEiB,KAAK,OACLd,UAAU,kBACVlB,MAAOvB,EAAKe,MAAMC,KAClB0B,SAAU1C,EAAKkD,YACf5B,KAAK,SAEPc,EAAAC,EAAAC,cAAA,UAAQG,UAAU,iBAAlB,UAMJL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KACElB,EAAAC,EAAAC,cAAA,QACEkB,QAASxD,EAAKmD,aACdV,UAAWzC,EAAK+B,MAAMD,UAAY,kBAAoB,SAErD9B,EAAK+B,MAAMf,MAEdoB,EAAAC,EAAAC,cAAA,QAAMG,UAAU,SACdL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAce,QAASxD,EAAK+C,aACzCX,EAAAC,EAAAC,cAAA,KACEG,UAAU,mBACVe,QAASxD,EAAK+B,MAAM0B,sBArDlCzD,EAAA,OAAAC,OAAAgC,EAAA,EAAAhC,CAAA4C,EAAA/C,GAAAG,OAAAiC,EAAA,EAAAjC,CAAA4C,EAAA,EAAAV,IAAA,SAAAZ,MAAA,WA+DI,OAAOa,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KAAGnD,KAAKkD,uBA/DnBR,EAAA,CAA0BD,aCEbc,EAAb,SAAA5D,GAAA,SAAA4D,IAAA,IAAA3D,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,GAAA,QAAAtD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAyD,IAAA9C,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CAAE4C,MAAO,IADnB3D,EAGEgC,QAAU,SAAAhB,GACRhB,EAAKmB,SAAS,CACZwC,MAAK,GAAA7C,OAAAb,OAAA2D,EAAA,EAAA3D,CAAMD,EAAKe,MAAM4C,OAAjB,CAAwB3C,OALnChB,EASE6D,WAAa,SAAAjC,GACX5B,EAAKmB,SAAS,CACZwC,MAAO3D,EAAKe,MAAM4C,MAAMG,OAAO,SAAA9C,GAAI,OAAIA,EAAKY,KAAOA,OAXzD5B,EAeE+D,WAAa,SAACnC,EAAIoC,GAChB,IAAMC,EAAejE,EAAKe,MAAM4C,MAAMO,IAAI,SAAAC,GACxC,OAAOA,EAAKvC,KAAOA,EAAZ3B,OAAA0B,EAAA,EAAA1B,CAAA,GAAsBkE,EAAtB,CAA4BnD,KAAMgD,IAAgBG,IAE3DnE,EAAKmB,SAAS,CAAEwC,MAAOM,KAnB3BjE,EAsBEoE,iBAAmB,SAAAxC,GACjB,IAAMqC,EAAejE,EAAKe,MAAM4C,MAAMO,IAAI,SAAAC,GACxC,OAAOA,EAAKvC,KAAOA,EAAZ3B,OAAA0B,EAAA,EAAA1B,CAAA,GAAsBkE,EAAtB,CAA4BrC,WAAYqC,EAAKrC,YAAcqC,IAEpEnE,EAAKmB,SAAS,CAAEwC,MAAOM,KA1B3BjE,EAAA,OAAAC,OAAAgC,EAAA,EAAAhC,CAAAyD,EAAA5D,GAAAG,OAAAiC,EAAA,EAAAjC,CAAAyD,EAAA,EAAAvB,IAAA,SAAAZ,MAAA,WA6BW,IAAA8C,EAAAlE,KACDwD,EAAQxD,KAAKY,MAAM4C,MAAMO,IAAI,SAAAC,GAAI,OACpCA,EAAKnD,MAASmD,EAAKvC,GAGlBQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACgC,EAAD,CACE1C,GAAIuC,EAAKvC,GACTO,IAAKgC,EAAKvC,GACVZ,KAAMmD,EAAKnD,KACXc,UAAWqC,EAAKrC,UAChB2B,iBAAkB,kBAAMY,EAAKR,WAAWM,EAAKvC,KAC7CwB,iBAAkB,kBAAMiB,EAAKD,iBAAiBD,EAAKvC,KACnDqB,iBAAkBoB,EAAKN,WAAWQ,KAAKF,MAV3C,KAgBJ,OACEjC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,0CAEFF,EAAAC,EAAAC,cAAA,UAAKqB,IAEPvB,EAAAC,EAAAC,cAACkC,EAAD,CAAUxC,QAAS7B,KAAK6B,eAzDhC0B,EAAA,CAA8Bd,mBCU9B,IAAM6B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOzC,EAAAC,EAAAC,cAThB,WACE,OACEF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAACwC,EAAD,QAMU,MAASL","file":"static/js/main.2ba8cc66.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport uuid from \"uuid\";\n\nexport class TodoForm extends Component {\n  state = { task: \"\" };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handlesubmit = e => {\n    e.preventDefault();\n    const newTask = { ...this.state, id: uuid(), completed: false };\n    if (!this.state.task) return;\n    this.props.addItem(newTask);\n    this.setState({ task: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handlesubmit}>\n        <label htmlFor=\"task\">New Todo</label>\n        <div className=\"input-container\">\n          <input\n            name=\"task\"\n            id=\"task\"\n            onChange={this.handleChange}\n            value={this.state.task}\n            placeholder=\"New Todo\"\n          />\n          <button className=\"btn-add\">ADD TODO</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport class Todo extends Component {\n  state = { isEditing: false, task: this.props.task };\n\n  toggleForm = () => {\n    this.setState({ isEditing: !this.state.isEditing });\n  };\n\n  handleUpdate = e => {\n    e.preventDefault();\n    this.props.handleUpdateItem(this.props.id, this.state.task);\n    this.setState({ isEditing: false });\n  };\n\n  handleChage = e => {\n    this.setState({\n      task: e.target.value\n    });\n  };\n\n  handleToggle = e => {\n    this.props.handleCompletion(this.props.id);\n  };\n\n  renderIsEditing = () => {\n    let result;\n    if (this.state.isEditing) {\n      result = (\n        <>\n          <form className=\"form-edit\" onSubmit={this.handleUpdate}>\n            <input\n              type=\"text\"\n              className=\"form-edit-input\"\n              value={this.state.task}\n              onChange={this.handleChage}\n              name=\"task\"\n            />\n            <button className=\"form-edit-btn\">SAVE</button>\n          </form>\n        </>\n      );\n    } else {\n      result = (\n        <>\n          <span\n            onClick={this.handleToggle}\n            className={this.props.completed ? \"todos completed\" : \"todos\"}\n          >\n            {this.props.task}\n          </span>\n          <span className=\"icons\">\n            <i className=\"fas fa-edit\" onClick={this.toggleForm} />\n            <i\n              className=\"far fa-trash-alt\"\n              onClick={this.props.handleDeleteItem}\n            />\n          </span>\n        </>\n      );\n    }\n    return result;\n  };\n\n  render() {\n    return <>{this.renderIsEditing()}</>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { TodoForm } from \"./TodoForm\";\nimport { Todo } from \"./Todo\";\n\nexport class TodoList extends Component {\n  state = { todos: [] };\n\n  addItem = task => {\n    this.setState({\n      todos: [...this.state.todos, task]\n    });\n  };\n\n  deleteItem = id => {\n    this.setState({\n      todos: this.state.todos.filter(task => task.id !== id)\n    });\n  };\n\n  updateItem = (id, updatedTask) => {\n    const updatedTodos = this.state.todos.map(todo => {\n      return todo.id === id ? { ...todo, task: updatedTask } : todo;\n    });\n    this.setState({ todos: updatedTodos });\n  };\n\n  toggleCompletion = id => {\n    const updatedTodos = this.state.todos.map(todo => {\n      return todo.id === id ? { ...todo, completed: !todo.completed } : todo;\n    });\n    this.setState({ todos: updatedTodos });\n  };\n\n  render() {\n    const todos = this.state.todos.map(todo =>\n      !todo.task && !todo.id ? (\n        \"\"\n      ) : (\n        <li>\n          <Todo\n            id={todo.id}\n            key={todo.id}\n            task={todo.task}\n            completed={todo.completed}\n            handleDeleteItem={() => this.deleteItem(todo.id)}\n            handleCompletion={() => this.toggleCompletion(todo.id)}\n            handleUpdateItem={this.updateItem.bind(this)}\n          />\n        </li>\n      )\n    );\n\n    return (\n      <div className=\"todo-bk\">\n        <div>\n          <div className=\"todo-title\">\n            <h2>Todo List</h2>\n            <p>A simple React Todo List App</p>\n          </div>\n          <ul>{todos}</ul>\n        </div>\n        <TodoForm addItem={this.addItem} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { TodoList } from \"./TodoList\";\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}